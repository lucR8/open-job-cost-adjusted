services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: warehouse
      POSTGRES_USER: analytics
      POSTGRES_PASSWORD: analytics
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U analytics -d warehouse"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data

  airflow:
    image: apache/airflow:2.9.3-python3.12
    env_file: .env
    environment:
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__WEBSERVER__RBAC: "true"
      AIRFLOW__CORE__DAGS_FOLDER: "/opt/airflow/dags"
      PYTHONPATH: "/opt/airflow:/opt/airflow/src:/opt/dbt"
      # Accélère/fiabilise l'install des deps via _PIP_ADDITIONAL_REQUIREMENTS
      PIP_NO_CACHE_DIR: "false"
      PIP_CACHE_DIR: "/tmp/pip-cache"
      _PIP_ADDITIONAL_REQUIREMENTS: "dbt-core==1.8.2 dbt-postgres==1.8.2 python-dotenv==1.0.1 pydantic==2.8.2"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./src:/opt/airflow/src
      - ./dbt:/opt/dbt
      - ./.env:/opt/airflow/.env:ro
      - pip-cache:/tmp/pip-cache
    ports:
      - "8080:8080"
    command:
      - bash
      - -lc
      - |
        airflow db init
        airflow users create \
          --username airflow --password airflow \
          --firstname Air --lastname Flow \
          --role Admin --email admin@example.com || true
        airflow scheduler & airflow webserver
    depends_on:
      postgres:
        condition: service_healthy

  metabase:
    image: metabase/metabase:latest
    ports:
      - "3000:3000"
    depends_on:
      - postgres

volumes:
  pgdata:
  pip-cache:
